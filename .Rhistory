knitr::opts_chunk$set(echo = TRUE)
library(DBI)
library(odbc)
con <- dbConnect(odbc::odbc(),
Driver = "ODBC Driver 18 for SQL Server",
Server = "evoo.database.windows.net",
Database = "chanks",
Uid = "cwh",
Pwd = "Movienight29",
Port = 1433,
Encrypt = "yes",
TrustServerCertificate = "no",
ConnectionTimeout = 30)
store_query = "SELECT * from grocery.store"
store = dbGetQuery(con, store_query)
trip_query = "SELECT * from grocery.trips"
trip = dbGetQuery(con, trip_query)
item_query = "SELECT * from grocery.items"
item = dbGetQuery(con, item_query)
trip
type(trip)
typeof(trip)
trip
as.data.frame(trip)
data.frame(item)
library(DBI)
library(odbc)
library(tidyverse)
tables = c('store','trips','items')
tables
tables[1]
print('grocery' + tables[1])
print('grocery' + str(tables[1])
paste('grocery.', tables[1], sep = '')
query_list = list()
query_list
query_list[[1]]
for (i in tables):
for (i in tables)
{
print(i)
}
#remember how do to do a for loop in R....?
for (i in 1:3)
{
print(i)
}
#remember how do to do a for loop in R....?
for (i in 1:3)
{
query_list[i] <- paste("SELECT * from grocery.", tables[i],sep = '')
}
print(query_list)
query_list = lapply(tables, function(x) paste0("SELECT * from grocery.",x))
query_list
query_list[1]
query_list = sapply(tables, function(x) paste0("SELECT * from grocery.",x))
query_list[1]
query_list = lapply(tables, function(x) paste0("SELECT * from grocery.",x))
is.list(query_list)
is.list(query_list[1])
query_list = lapply(tables, function(x) paste0("SELECT * from grocery.",x))
unlist(query_list)
query_list
length(tables)
# input: a list of table names
# output: a list of dataframes
querier = function(tables)
{
df_list = list()
for (i in 1:length(tables))
{
df_list[i] = dbGetQuery(con, query_list[[i]])
}
}
querier(tables)
con <- dbConnect(odbc::odbc(),
Driver = "ODBC Driver 18 for SQL Server",
Server = "evoo.database.windows.net",
Database = "chanks",
Uid = "cwh",
Pwd = "Movienight29",
Port = 1433,
Encrypt = "yes",
TrustServerCertificate = "no",
ConnectionTimeout = 30)
library(DBI)
library(odbc)
library(tidyverse)
con <- dbConnect(odbc::odbc(),
Driver = "ODBC Driver 18 for SQL Server",
Server = "evoo.database.windows.net",
Database = "chanks",
Uid = "cwh",
Pwd = "Movienight29",
Port = 1433,
Encrypt = "yes",
TrustServerCertificate = "no",
ConnectionTimeout = 30)
tables = c('store','trips','items')
query_list = list()
query_list = lapply(tables, function(x) paste0("SELECT * from grocery.",x))
# input: a list of table names
# output: a list of dataframes
querier = function(tables)
{
df_list = list()
for (i in 1:length(tables))
{
df_list[i] = dbGetQuery(con, query_list[[i]])
}
}
querier(tables)
df_list
# input: a list of table names
# output: a list of dataframes
querier = function(tables)
{
df_list = list()
for (i in 1:length(tables))
{
df_list[i] = dbGetQuery(con, query_list[[i]])
}
return(df_list)
}
querier(tables)
df_list
tables = c('store','trips','items')
query_list = list()
query_list = lapply(tables, function(x) paste0("SELECT * from grocery.",x))
query_list
test_query = dbGetQuery(con, query_list[[1]])
test_query
queries = list()
for (i in 1:length(tables)){
queries[i] = dbGetQuery(con, query_list[[i]])
}
queries
queries[1]
queries[[1]]
queries = list()
for (i in 1:length(tables)){
queries[[i]] = dbGetQuery(con, query_list[[i]])
}
queries[[1]]
queries[[2]]
queries[[3]]
# input: a list of table names
# output: a list of dataframes
querier = function(tables)
{
query_list = lapply(tables, function(x) paste0("SELECT * from grocery.",x))
df_list = list()
for (i in 1:length(tables))
{
df_list[[i]] = dbGetQuery(con, query_list[[i]])
}
return(df_list)
}
querier(tables)
df_list
dfs = querier(tables)
dfs
dfs[1]
length(dfs)
stores = dfs[1]
trips = dfs[2]
items = dfs[3]
items
trips
trips_with_store_name = inner_join(trips, store, by = "store_id")
class(store)
class(trips)
trips
unlist(trips)
trips[[1]]
trips = trips[[1]]
trips_with_store_name = inner_join(trips, store, by = "store_id")
store
trips_with_store_name = inner_join(trips, store, by = c("store_id" = "id"))
trips_with_store_name
trips_with_store_name %>% group_by(name) %>% count()
trips_with_store_name %>% group_by(name) %>% count() %>% ggplot(aes(x = name, y = n)) + geom_col()
trips_with_store_name %>% group_by(name) %>% count() %>% ggplot(aes(x = n, y = name)) + geom_col()
trips_with_store_name %>% group_by(name) %>% count() %>% ggplot(aes(x = n, y = reorder(name, -n))) + geom_col()
trips_with_store_name %>% group_by(name) %>% count() %>% ggplot(aes(x = n, y = reorder(name, n))) + geom_col()
trips_with_store_name %>% group_by(name) %>% count() %>% ggplot(aes(x = n, y = reorder(name, n))) + geom_col(aes(fill = name)
trips_with_store_name %>% group_by(name) %>% count() %>% ggplot(aes(x = n, y = reorder(name, n))) + geom_col(aes(fill = name))
trips_with_store_name %>% group_by(name) %>% count() %>%
ggplot(aes(x = n, y = reorder(name, n))) + geom_col(aes(fill = name)) +
labs(title = "Store Shoppping Frequency (Sep 2023 - May 2024)", x = "Number of Visits", y = "Store")
